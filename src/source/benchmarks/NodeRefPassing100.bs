@suite()
namespace NodeRefPassing100
    const CHILD_COUNT = 100
    sub setup()
        result = invalid

        nodeArray = []
        for i = 0 to CHILD_COUNT
            nodeArray.push(createObject("roSGNode", "ContentNode"))
        end for

        nodeWithArray = createObject("roSGNode", "Node")
        nodeWithArray.update({
            nodeArray: nodeArray
        }, true)

        nodeWithChildren = createObject("roSGNode", "Node")
        for i = 0 to CHILD_COUNT
            nodeWithChildren.appendChild(createObject("roSGNode", "ContentNode"))
        end for

    end sub

    @test("field")
    sub _()
        result = nodeWithArray.nodeArray
    end sub

    @test("children")
    sub _()
        result = nodeWithChildren.getChildren(-1, 0)
    end sub

    @test("array loop")
    sub _()
        for i = 0 to nodeArray.count() - 1
            result = nodeArray[i]
        end for
    end sub

    @test("field loop")
    sub _()
        nodes = nodeWithArray.nodeArray
        for i = 0 to nodes.count() - 1
            result = nodes[i]
        end for
    end sub

    @test("field loop stupid")
    sub _()
        for i = 0 to nodeWithArray.nodeArray.count() - 1
            result = nodeWithArray.nodeArray[i]
        end for
    end sub

    @test("node children loop")
    sub _()
        for i = 0 to nodeWithChildren.getChildCount() - 1
            result = nodeWithChildren.getChild(i)
        end for
    end sub
end namespace
